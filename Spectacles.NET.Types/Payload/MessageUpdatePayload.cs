using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace Spectacles.NET.Types
{
	/// <summary>
	///     The Payload for the MessageUpdate event.
	/// </summary>
	[DataContract]
	public class MessageUpdatePayload
	{
		/// <summary>
		///     id of the message
		/// </summary>
		[DataMember(Name="id", Order=1)]
		public string Id { get; set; }

		/// <summary>
		///     id of the channel the message was sent in
		/// </summary>
		[DataMember(Name="channel_id", Order=2)]
		public string ChannelId { get; set; }

		/// <summary>
		///     id of the guild the message was sent in
		/// </summary>
		[DataMember(Name="guild_id", Order=3)]
		public string GuildId { get; set; }

		/// <summary>
		///     the author of this message
		/// </summary>
		[DataMember(Name="author", Order=4)]
		public User Author { get; set; }

		/// <summary>
		///     member properties for this message's author
		/// </summary>
		[DataMember(Name="member", Order=5)]
		public GuildMember Member { get; set; }

		/// <summary>
		///     contents of the message
		/// </summary>
		[DataMember(Name="content", Order=6)]
		public string Content { get; set; }

		/// <summary>
		///     when this message was sent
		/// </summary>
		[DataMember(Name="timestamp", Order=7)]
		public DateTime? Timestamp { get; set; }

		/// <summary>
		///     when this message was edited (or null if never)
		/// </summary>
		[DataMember(Name="edited_timestamp", Order=8)]
		public DateTime? EditedTimestamp { get; set; }

		/// <summary>
		///     whether this was a TTS message
		/// </summary>
		[DataMember(Name="tts", Order=9)]
		public bool? TTS { get; set; }

		/// <summary>
		///     whether this message mentions everyone
		/// </summary>
		[DataMember(Name="mention_everyone", Order=10)]
		public bool? MentionEveryone { get; set; }

		/// <summary>
		///     users specifically mentioned in the message
		/// </summary>
		[DataMember(Name="mentions", Order=11)]
		public List<MentionUser> Mentions { get; set; }

		/// <summary>
		///     roles specifically mentioned in this message
		/// </summary>
		[DataMember(Name="mention_roles", Order=12)]
		public List<string> RoleMentions { get; set; }

		/// <summary>
		///     any attached files
		/// </summary>
		[DataMember(Name="attachments", Order=13)]
		public List<Attachment> Attachments { get; set; }

		/// <summary>
		///     any embedded content
		/// </summary>
		[DataMember(Name="embeds", Order=14)]
		public List<Embed> Embeds { get; set; }

		/// <summary>
		///     reactions to the message
		/// </summary>
		[DataMember(Name="reactions", Order=15)]
		public List<Reaction> Reactions { get; set; }

		/// <summary>
		///     used for validating a message was sent
		/// </summary>
		[DataMember(Name="nonce", Order=16)]
		public string Nonce { get; set; }

		/// <summary>
		///     whether this message is pinned
		/// </summary>
		[DataMember(Name="pinned", Order=17)]
		public bool? Pinned { get; set; }

		// ReSharper disable once CommentTypo
		/// <summary>
		///     if the message is generated by a webhook, this is the webhook's id
		/// </summary>
		[DataMember(Name="webhook_id", Order=18)]
		public string WebhookId { get; set; }

		/// <summary>
		///     <see cref="MessageType" />
		/// </summary>
		[DataMember(Name="type", Order=19)]
		public MessageType? Type { get; set; }

		/// <summary>
		///     sent with Rich Presence-related chat embeds
		/// </summary>
		[DataMember(Name="activity", Order=20)]
		public MessageActivity Activity { get; set; }

		/// <summary>
		///     sent with Rich Presence-related chat embeds
		/// </summary>
		[DataMember(Name="application", Order=21)]
		public MessageApplication Application { get; set; }
	}
}
